username: periwinkle
hostname: localhost
password: TXbAcSNWzITjKtGT



/periwinkleapp/api/services/account
 -> add
 -> get (para sa login) (sa url ung hash)
 -> delete
 -> update


/periwinkleapp/api/services/admin
/periwinkleapp/api/services/client
/periwinkleapp/api/services/consultant
 -> register





***para sa password***
save db, hash + salt

user try login username password
in C#, password -> hash
in PHP, get salt for hash through http
in PHP, verify hash + salt == password
in PHP, send to C# if verified

To Store a Password
   - Generate a long random salt using a CSPRNG.
   - Prepend the salt to the password and hash it with a standard password hashing function like Argon2, bcrypt, scrypt, or PBKDF2.
   - Save both the salt and the hash in the user's database record.

To Validate a Password
   - Retrieve the user's salt and hash from the database.
   - Prepend the salt to the given password and hash it using the same hash function.
   - Compare the hash of the given password with the hash from the database. If they match, the password is correct. Otherwise, the password is incorrect.




ALTER TABLE account AUTO_INCREMENT = 1;
ALTER TABLE client AUTO_INCREMENT = 1;
ALTER TABLE consultant AUTO_INCREMENT = 1;
ALTER TABLE password AUTO_INCREMENT = 1;
